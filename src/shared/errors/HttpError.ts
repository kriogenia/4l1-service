import { StatusCodes } from "http-status-codes";
import { Severity } from "@/shared/constants";

/**
 * Schema of the JSON generated by the HttpError
 */
interface HttpErrorJson {
    message: string
}

/**
 * Options of the error to construct
 */
interface Options {
	name?: string;
	status?: number;
	severity?: Severity;
	message?: string;
}

/**
 * Base Http error to throw in the development.
 * All the created errors should extend this one.
 */
export class HttpError extends Error {

	readonly name: string;
	readonly status: number;
	readonly severity: Severity;

	/**
	 * @constructor
	 * @param options of the error 
	 */
	constructor({name, status, severity, message}: Options) {
		super(message);
		Object.setPrototypeOf(this, new.target.prototype);
		Error.captureStackTrace(this);
		this.name = name || "Error";
		this.status = status || StatusCodes.INTERNAL_SERVER_ERROR;
		this.severity = severity || Severity.ERR;
	}

    /**
     * @returns Plain object version of the error
     */
    public toJson() : HttpErrorJson {
        return {
            message: this.message
        };
    }

}